{"version":3,"sources":["components/Form.js","components/JumboTron.js","apis/sih.js","components/IdeaCard.js","components/Loader.js","components/IdeasList.js","components/app.js","index.js"],"names":["hardwareTech","softwareTech","Form","state","category","technology","disabledTech","disabledBtn","getTechnologyList","map","value","key","onSubmit","e","preventDefault","props","onFormSubmit","className","this","id","onChange","setState","target","disabled","Component","JumboTron","axios","create","baseURL","IdeaCard","idea","title","description","Loader","role","IdeasList","componentDidUpdate","ideas","length","scrollToDiv","divToFocus","current","console","log","scrollIntoView","behavior","block","generateAllCards","_id","React","createRef","showLoader","ref","App","a","sihApi","post","rawIdeas","data","body","ReactDOM","render","document","querySelector"],"mappings":"6TAGMA,G,YAAe,CACnB,gBACA,cACA,sBACA,0BACA,oBACA,0BACA,oCACA,eACA,kCACA,iBACA,4BACA,kBACA,mBACA,kBACA,qBACA,iBACA,qBACA,mCAEIC,EAAe,CACnB,sBACA,kCACA,gBACA,iBACA,iCACA,4BACA,oCACA,oBACA,oCACA,mBACA,0BACA,UACA,eACA,qBACA,kBACA,0BACA,kBACA,iBACA,sBA+FaC,E,4MA3FbC,MAAQ,CACNC,SAAU,GACVC,WAAY,GACZC,cAAc,EACdC,aAAa,G,EAEfC,kBAAoB,WAClB,MAA4B,KAAxB,EAAKL,MAAMC,SAAwB,GACN,aAAxB,EAAKD,MAAMC,SACXH,EAAaQ,KAAI,SAAAJ,GACtB,OACE,4BAAQK,MAAOL,EAAYM,IAAKN,GAC7BA,MAKAL,EAAaS,KAAI,SAAAJ,GACtB,OACE,4BAAQK,MAAOL,EAAYM,IAAKN,GAC7BA,O,uDAOD,IAAD,OACP,OACE,0BACEO,SAAU,SAAAC,GACRA,EAAEC,iBACF,EAAKC,MAAMC,aAAa,CACtBZ,SAAU,EAAKD,MAAMC,SACrBC,WAAY,EAAKF,MAAME,eAI3B,yBAAKY,UAAU,OACb,yBAAKA,UAAU,qBACb,4BACEP,MAAOQ,KAAKf,MAAMC,SAClBa,UAAU,eACVE,GAAG,WACHC,SAAU,SAAAP,GACR,EAAKQ,SAAS,CACZjB,SAAUS,EAAES,OAAOZ,MACnBJ,cAAc,MAIlB,4BAAQiB,UAAQ,EAACb,MAAM,IAAvB,qBAGA,4BAAQA,MAAM,YAAd,YACA,4BAAQA,MAAM,YAAd,cAGJ,yBAAKO,UAAU,qBACb,4BACEP,MAAOQ,KAAKf,MAAME,WAClBY,UAAU,eACVE,GAAG,aACHC,SAAU,SAAAP,GACR,EAAKQ,SAAS,CACZhB,WAAYQ,EAAES,OAAOZ,MACrBH,aAAa,KAGjBgB,SAAUL,KAAKf,MAAMG,cAErB,4BAAQiB,UAAQ,EAACb,MAAM,IAAvB,uBAGCQ,KAAKV,sBAGV,yBAAKS,UAAU,sBACb,4BACEA,UAAU,sBACVM,SAAUL,KAAKf,MAAMI,aAFvB,iB,GA/EOiB,aCvBJC,E,uKAhBX,OACE,yBAAKR,UAAU,aACb,6BACE,wBAAIA,UAAU,yBAAd,qCAGA,uBAAGA,UAAU,oBAAb,kEAIF,kBAAC,EAAD,CAAMD,aAAcE,KAAKH,MAAMC,oB,GAZfQ,a,QCFTE,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,wCCaIC,E,uKAbH,IAAD,EACwBX,KAAKH,MAAMe,KAAlCC,EADD,EACCA,MAAOC,EADR,EACQA,YACf,OACE,yBAAKf,UAAU,QACb,yBAAKA,UAAU,aACb,wBAAIA,UAAU,cAAcc,GAC5B,uBAAGd,UAAU,wBAAwBe,S,GAPxBR,aCYRS,EAZf,uKAEI,OACE,yBAAKhB,UAAU,eACb,yBAAKA,UAAU,iBAAiBiB,KAAK,UACnC,0BAAMjB,UAAU,WAAhB,oBALV,GAA4BO,aCsCbW,E,kDAnCb,WAAYpB,GAAQ,IAAD,8BACjB,cAAMA,IAIRqB,mBAAqB,WACf,EAAKrB,MAAMsB,MAAMC,OAAS,GAC5B,EAAKC,eAPU,EAWnBA,YAAc,WACR,EAAKC,WAAWC,UAClBC,QAAQC,IAAI,UACZ,EAAKH,WAAWC,QAAQG,eAAe,CACrCC,SAAU,SACVC,MAAO,cAhBM,EAoBnBC,iBAAmB,kBACjB,EAAKhC,MAAMsB,MAAM5B,KAAI,SAAAqB,GACnB,OAAO,kBAAC,EAAD,CAAUA,KAAMA,EAAMnB,IAAKmB,EAAKkB,UApBzC,EAAKR,WAAaS,IAAMC,YAFP,E,qDAyBjB,OAAIhC,KAAKH,MAAMoC,WAAmB,kBAAC,EAAD,MACG,IAA5BjC,KAAKH,MAAMsB,MAAMC,OAAqB,8BAE7C,yBAAKrB,UAAU,eAAemC,IAAKlC,KAAKsB,YACrCtB,KAAK6B,wB,GA9BUvB,aC6BT6B,E,4MA3BblD,MAAQ,CACNkC,MAAO,GACPc,YAAY,G,EAEdnC,a,uCAAe,iCAAAsC,EAAA,6DAASlD,EAAT,EAASA,SAAUC,EAAnB,EAAmBA,WAChC,EAAKgB,SAAS,CAAEgB,MAAO,GAAIc,YAAY,IAD1B,SAEQI,EAAOC,KAAK,IAAK,CACpCpD,WACAC,eAJW,OAEToD,EAFS,OAMb,EAAKpC,SAAS,CAAEgB,MAAOoB,EAASC,KAAKC,KAAMR,YAAY,IAN1C,2C,6GASb,OACE,6BACE,kBAAC,EAAD,CAAWnC,aAAcE,KAAKF,eAC9B,yBAAKC,UAAU,aACb,kBAAC,EAAD,CACEoB,MAAOnB,KAAKf,MAAMkC,MAClBc,WAAYjC,KAAKf,MAAMgD,mB,GApBjB3B,aCIlBoC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,cAAc,Y","file":"static/js/main.005e0485.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./Form.css\";\n\nconst hardwareTech = [\n  \"miscellaneous\",\n  \"clean water\",\n  \"smart communication\",\n  \"sustainable environment\",\n  \"robotics & drones\",\n  \"security & surveillance\",\n  \"agriculture and rural development\",\n  \"smart cities\",\n  \"healthcare & biomedical devices\",\n  \"smart vehicles\",\n  \"energy / renewable energy\",\n  \"food technology\",\n  \"waste management\",\n  \"smart education\",\n  \"travel and tourism\",\n  \"smart textiles\",\n  \"sports and fitness\",\n  \"software - web app development\"\n];\nconst softwareTech = [\n  \"smart communication\",\n  \"healthcare & biomedical devices\",\n  \"miscellaneous\",\n  \"smart vehicles\",\n  \"software - web app development\",\n  \"energy / renewable energy\",\n  \"agriculture and rural development\",\n  \"robotics & drones\",\n  \"software - mobile app development\",\n  \"waste management\",\n  \"security & surveillance\",\n  \"finance\",\n  \"smart cities\",\n  \"travel and tourism\",\n  \"smart education\",\n  \"sustainable environment\",\n  \"food technology\",\n  \"smart textiles\",\n  \"sports and fitness\"\n];\n\nclass Form extends Component {\n  state = {\n    category: \"\",\n    technology: \"\",\n    disabledTech: true,\n    disabledBtn: true\n  };\n  getTechnologyList = () => {\n    if (this.state.category === \"\") return [];\n    else if (this.state.category === \"software\") {\n      return softwareTech.map(technology => {\n        return (\n          <option value={technology} key={technology}>\n            {technology}\n          </option>\n        );\n      });\n    } else {\n      return hardwareTech.map(technology => {\n        return (\n          <option value={technology} key={technology}>\n            {technology}\n          </option>\n        );\n      });\n    }\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={e => {\n          e.preventDefault();\n          this.props.onFormSubmit({\n            category: this.state.category,\n            technology: this.state.technology\n          });\n        }}\n      >\n        <div className=\"row\">\n          <div className=\"col-md-4 col-sm-4\">\n            <select\n              value={this.state.category}\n              className=\"form-control\"\n              id=\"category\"\n              onChange={e => {\n                this.setState({\n                  category: e.target.value,\n                  disabledTech: false\n                });\n              }}\n            >\n              <option disabled value=\"\">\n                Select a category\n              </option>\n              <option value=\"software\">Software</option>\n              <option value=\"hardware\">Hardware</option>\n            </select>\n          </div>\n          <div className=\"col-md-6 col-sm-8\">\n            <select\n              value={this.state.technology}\n              className=\"form-control\"\n              id=\"technology\"\n              onChange={e => {\n                this.setState({\n                  technology: e.target.value,\n                  disabledBtn: false\n                });\n              }}\n              disabled={this.state.disabledTech}\n            >\n              <option disabled value=\"\">\n                Select a technology\n              </option>\n              {this.getTechnologyList()}\n            </select>\n          </div>\n          <div className=\"col-md-2 col-sm-12\">\n            <button\n              className=\"btn btn-light w-100\"\n              disabled={this.state.disabledBtn}\n            >\n              Submit\n            </button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n","import React, { Component } from \"react\";\nimport \"./JumboTron.css\";\nimport Form from \"./Form\";\n\nclass JumboTron extends Component {\n  render() {\n    return (\n      <div className=\"jumbotron\">\n        <div>\n          <h1 className=\"text-center display-5\">\n            SIH 2020 Problem Statement Viewer\n          </h1>\n          <p className=\"lead text-center\">\n            A user freindly interface to view SIH 2020 problem statements\n          </p>\n        </div>\n        <Form onFormSubmit={this.props.onFormSubmit} />\n      </div>\n    );\n  }\n}\n\nexport default JumboTron;\n","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://sih2020ps.herokuapp.com/api\"\n});\n","import React, { Component } from \"react\";\n\nclass IdeaCard extends Component {\n  render() {\n    const { title, description } = this.props.idea;\n    return (\n      <div className=\"card\">\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{title}</h5>\n          <p className=\"card-text text-muted\">{description}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default IdeaCard;\n","import React, { Component } from \"react\";\n\nexport class Loader extends Component {\n  render() {\n    return (\n      <div className=\"text-center\">\n        <div className=\"spinner-border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport IdeaCard from \"./IdeaCard\";\nimport Loader from \"./Loader\";\n\nclass IdeasList extends Component {\n  constructor(props) {\n    super(props);\n    this.divToFocus = React.createRef();\n  }\n\n  componentDidUpdate = () => {\n    if (this.props.ideas.length > 0) {\n      this.scrollToDiv();\n    }\n  };\n\n  scrollToDiv = () => {\n    if (this.divToFocus.current) {\n      console.log(\"object\");\n      this.divToFocus.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"nearest\"\n      });\n    }\n  };\n  generateAllCards = () =>\n    this.props.ideas.map(idea => {\n      return <IdeaCard idea={idea} key={idea._id} />;\n    });\n  render() {\n    if (this.props.showLoader) return <Loader />;\n    else if (this.props.ideas.length === 0) return <div></div>;\n    return (\n      <div className=\"card-columns\" ref={this.divToFocus}>\n        {this.generateAllCards()}\n      </div>\n    );\n  }\n}\n\nexport default IdeasList;\n","import React, { Component } from \"react\";\nimport JumboTron from \"./JumboTron\";\nimport sihApi from \"../apis/sih\";\nimport IdeasList from \"./IdeasList\";\n\nclass App extends Component {\n  state = {\n    ideas: [],\n    showLoader: false\n  };\n  onFormSubmit = async ({ category, technology }) => {\n    this.setState({ ideas: [], showLoader: true });\n    let rawIdeas = await sihApi.post(\"/\", {\n      category,\n      technology\n    });\n    this.setState({ ideas: rawIdeas.data.body, showLoader: false });\n  };\n  render() {\n    return (\n      <div>\n        <JumboTron onFormSubmit={this.onFormSubmit} />\n        <div className=\"container\">\n          <IdeasList\n            ideas={this.state.ideas}\n            showLoader={this.state.showLoader}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n// import $ from \"jquery\";\n// import Popper from \"popper.js\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport App from \"./components/app\";\n\nReactDOM.render(<App />, document.querySelector(\"#root\"));\n\n// TODO: handle errors\n// TODO: add functionality to specify link to each card for sharing\n"],"sourceRoot":""}